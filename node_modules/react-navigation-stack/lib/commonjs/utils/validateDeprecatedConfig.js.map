{"version":3,"sources":["validateDeprecatedConfig.tsx"],"names":["shownWarnings","validations","transparentCard","message","compat","c","o","cardStyle","backgroundColor","headerLayoutPreset","headerTitleAlign","headerTransitionPreset","transitionConfig","reduce","acc","name","validateDeprecatedConfig","config","options","result","Object","keys","forEach","process","env","NODE_ENV","includes","console","warn","push"],"mappings":"6WAUA,GAAMA,CAAAA,aAAuB,CAAG,EAAhC,CAEA,GAAMC,CAAAA,WAAuC,6BAC3CC,eAAe,CAAE,CACfC,OAAO,wLADQ,CAEfC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QACND,CAAAA,CAAC,CAACH,eAAF,+BAESI,CAFT,EAGMC,SAAS,CAAE,CAAC,CAAEC,eAAe,CAAE,aAAnB,CAAD,CAAqCF,CAAC,CAACC,SAAvC,CAHjB,GAKID,CANE,EAFO,CAD0B,CAW3CG,kBAAkB,CAAE,CAClBN,OAAO,+JADW,CAElBC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,sCAAgBA,CAAhB,EAAmBI,gBAAgB,CAAEL,CAAC,CAACI,kBAAvC,IAFU,CAXuB,CAe3CE,sBAAsB,CAAE,CACtBR,OAAO,yEADe,CAfmB,CAkB3CS,gBAAgB,CAAE,CAChBT,OAAO,mEADS,CAlByB,EAqBxC,CACD,mBADC,CAED,oBAFC,CAGD,WAHC,CAID,wBAJC,CAKD,mBALC,CAMD,iBANC,EAODU,MAPC,CAOkC,SAACC,GAAD,CAAMC,IAAN,CAAe,CAClDD,GAAG,CAACC,IAAD,CAAH,CAAY,CACVZ,OAAO,KAAMY,IAAN,0GADG,CAEVX,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,sCAAgBA,CAAhB,iCAAoBS,IAApB,CAA2B,iBAAMV,CAAAA,CAAC,CAACU,IAAD,CAAP,EAA3B,IAFE,CAAZ,CAKA,MAAOD,CAAAA,GAAP,CACD,CAdE,CAcA,EAdA,CArBwC,CAA7C,CAsCe,QAASE,CAAAA,wBAAT,CACbC,MADa,CAEbC,OAFa,CAGb,CACA,GAAIC,CAAAA,MAAM,CAAGD,OAAb,CAEAE,MAAM,CAACC,IAAP,CAAYpB,WAAZ,EAAyBqB,OAAzB,CAAiC,SAAAP,IAAI,CAAI,CACvC,GAAIA,IAAI,GAAIE,CAAAA,MAAZ,CAAoB,uBACUhB,WAAW,CAACc,IAAD,CADrB,CACVX,MADU,mBACVA,MADU,CACFD,OADE,mBACFA,OADE,CAGlBgB,MAAM,CAAGf,MAAM,CAAGA,MAAM,CAACa,MAAD,CAASE,MAAT,CAAT,CAA4BA,MAA3C,CAEA,GAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,GAAIzB,aAAa,CAAC0B,QAAd,CAAuBvB,OAAvB,CAAJ,CAAqC,CACnC,OACD,CAEDwB,OAAO,CAACC,IAAR,4CAAwDzB,OAAxD,EACAH,aAAa,CAAC6B,IAAd,CAAmB1B,OAAnB,EACD,CACF,CACF,CAfD,EAiBA,MAAOgB,CAAAA,MAAP,CACD","sourcesContent":["import { StackNavigationOptions, StackNavigationConfig } from '../vendor/types';\n\ntype Validation = {\n  message: string;\n  compat?: (\n    c: Record<string, any>,\n    o: StackNavigationOptions\n  ) => StackNavigationOptions;\n};\n\nconst shownWarnings: string[] = [];\n\nconst validations: Record<string, Validation> = {\n  transparentCard: {\n    message: `'transparentCard' is removed in favor of 'cardStyle: { backgroundColor: 'transparent' }' in 'navigationOptions'. Specify it in 'defaultNavigationOptions' to keep the same behaviour.`,\n    compat: (c, o) =>\n      c.transparentCard\n        ? {\n            ...o,\n            cardStyle: [{ backgroundColor: 'transparent' }, o.cardStyle],\n          }\n        : o,\n  },\n  headerLayoutPreset: {\n    message: `'headerLayoutPreset' is renamed to 'headerTitleAlign' and moved to 'navigationOptions'. Specify it in 'defaultNavigationOptions' to keep the same behaviour.`,\n    compat: (c, o) => ({ ...o, headerTitleAlign: c.headerLayoutPreset }),\n  },\n  headerTransitionPreset: {\n    message: `'headerTransitionPreset' is removed in favor of the new animation APIs`,\n  },\n  transitionConfig: {\n    message: `'transitionConfig' is removed in favor of the new animation APIs`,\n  },\n  ...[\n    'cardShadowEnabled',\n    'cardOverlayEnabled',\n    'cardStyle',\n    'headerBackTitleVisible',\n    'onTransitionStart',\n    'onTransitionEnd',\n  ].reduce<Record<string, Validation>>((acc, name) => {\n    acc[name] = {\n      message: `'${name}' is moved to 'navigationOptions'. Specify it in 'defaultNavigationOptions' to keep the same behaviour.`,\n      compat: (c, o) => ({ ...o, [name]: () => c[name] }),\n    };\n\n    return acc;\n  }, {}),\n};\n\nexport default function validateDeprecatedConfig(\n  config: StackNavigationConfig,\n  options: StackNavigationOptions\n) {\n  let result = options;\n\n  Object.keys(validations).forEach(name => {\n    if (name in config) {\n      const { compat, message } = validations[name];\n\n      result = compat ? compat(config, result) : result;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (shownWarnings.includes(message)) {\n          return;\n        }\n\n        console.warn(`Deprecation in 'createStackNavigator':\\n${message}`);\n        shownWarnings.push(message);\n      }\n    }\n  });\n\n  return result;\n}\n"]}