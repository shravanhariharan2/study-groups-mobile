{"version":3,"sources":["HeaderBackButton.tsx"],"names":["HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","Platform","OS","onLabelLayout","onPress","customPressColorAndroid","pressColorAndroid","screenLayout","customTintColor","tintColor","titleLayout","truncatedLabel","dark","colors","React","useState","undefined","initialLabelWidth","setInitialLabelWidth","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","styles","icon","Boolean","iconWithLabel","require","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","color","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","container","top","right","bottom","left","StyleSheet","create","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport useTheme from '../../../utils/useTheme';\nimport { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={\n        label && label !== 'Back' ? `${label}, back` : 'Go back'\n      }\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]}