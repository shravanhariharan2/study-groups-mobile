import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";import*as React from'react';import{TextInput,Keyboard}from'react-native';var KeyboardManager=function(_React$Component){_inherits(KeyboardManager,_React$Component);function KeyboardManager(){var _getPrototypeOf2;var _this;_classCallCheck(this,KeyboardManager);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(KeyboardManager)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.componentWillUnmount=function(){_this.clearKeyboardTimeout();};_this.previouslyFocusedTextInput=null;_this.startTimestamp=0;_this.clearKeyboardTimeout=function(){if(_this.keyboardTimeout!==undefined){clearTimeout(_this.keyboardTimeout);_this.keyboardTimeout=undefined;}};_this.handlePageChangeStart=function(){if(!_this.props.enabled){return;}_this.clearKeyboardTimeout();var input=TextInput.State.currentlyFocusedField();TextInput.State.blurTextInput(input);_this.previouslyFocusedTextInput=input;_this.startTimestamp=Date.now();};_this.handlePageChangeConfirm=function(){if(!_this.props.enabled){return;}_this.clearKeyboardTimeout();Keyboard.dismiss();_this.previouslyFocusedTextInput=null;};_this.handlePageChangeCancel=function(){if(!_this.props.enabled){return;}_this.clearKeyboardTimeout();var input=_this.previouslyFocusedTextInput;if(input){if(Date.now()-_this.startTimestamp<100){_this.keyboardTimeout=setTimeout(function(){TextInput.State.focusTextInput(input);_this.previouslyFocusedTextInput=null;},100);}else{TextInput.State.focusTextInput(input);_this.previouslyFocusedTextInput=null;}}};return _this;}_createClass(KeyboardManager,[{key:"render",value:function render(){return this.props.children({onPageChangeStart:this.handlePageChangeStart,onPageChangeConfirm:this.handlePageChangeConfirm,onPageChangeCancel:this.handlePageChangeCancel});}}]);return KeyboardManager;}(React.Component);export{KeyboardManager as default};
//# sourceMappingURL=KeyboardManager.js.map