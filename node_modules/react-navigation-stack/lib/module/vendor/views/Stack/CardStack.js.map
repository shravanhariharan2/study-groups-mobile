{"version":3,"sources":["CardStack.tsx"],"names":["React","Animated","View","StyleSheet","Dimensions","Platform","ScreenContainer","Screen","screensEnabled","getDefaultHeaderHeight","CardContainer","DefaultTransition","ModalTransition","forNoAnimation","forNoAnimationHeader","forNoAnimationCard","getDistanceForDirection","EPSILON","dimensions","get","layout","width","height","MaybeScreenContainer","enabled","rest","OS","MaybeScreen","active","FALLBACK_DESCRIPTOR","Object","freeze","options","getFloatingHeaderHeights","routes","insets","descriptors","previous","reduce","acc","curr","key","flatten","headerStyle","safeAreaInsets","getDistanceFromOptions","mode","descriptor","gestureDirection","getProgressFromGesture","gesture","distance","interpolate","inputRange","outputRange","extrapolate","CardStack","state","scenes","gestures","props","floatingHeaderHeights","handleLayout","e","nativeEvent","setState","handleFloatingHeaderLayout","route","previousHeight","closingRouteKeys","onOpenRoute","onCloseRoute","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","index","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","top","right","bottom","left","styles","container","map","self","focused","scene","isScreenActive","length","progress","next","headerShown","headerTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","animationEnabled","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","absoluteFill","includes","onContentHeightChange","styleInterpolator","undefined","style","floating","Value","openingRouteKeys","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","current","__memo","every","it","i","Component","create","flex","overflow","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Route,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  floatingHeaderHeights: Record<string, number>;\n};\n\nconst EPSILON = 1e-5;\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nconst MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && screensEnabled()) {\n    return <ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && screensEnabled()) {\n    // @ts-ignore\n    return <Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getFloatingHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, {\n            ...insets,\n            ...options.safeAreaInsets,\n          });\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(mode, layout, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n      extrapolate: 'clamp',\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n    extrapolate: 'clamp',\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      floatingHeaderHeights: getFloatingHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.floatingHeaderHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    gestures: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    floatingHeaderHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        floatingHeaderHeights: getFloatingHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          {}\n        ),\n      };\n    });\n  };\n\n  private handleFloatingHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ floatingHeaderHeights }) => {\n      const previousHeight = this.state.floatingHeaderHeights[route.key];\n\n      if (previousHeight && previousHeight === height) {\n        return null;\n      }\n\n      return {\n        floatingHeaderHeights: {\n          ...floatingHeaderHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, floatingHeaderHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={mode !== 'modal'}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // Display current screen and a screen beneath.\n            // On Android screen beneath is hidden on animation finished bs of RNS's issue.\n            const isScreenActive =\n              index === self.length - 1\n                ? 1\n                : Platform.OS === 'android'\n                ? scene.progress.next\n                  ? scene.progress.next.interpolate({\n                      inputRange: [0, 1 - EPSILON, 1],\n                      outputRange: [1, 1, 0],\n                      extrapolate: 'clamp',\n                    })\n                  : 1\n                : index === self.length - 2\n                ? 1\n                : 0;\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={mode !== 'modal'}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={scenes[index - 1]}\n                  state={state}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  floatingHeaderHeight={floatingHeaderHeights[route.key]}\n                  getPreviousRoute={getPreviousRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  gestureDirection={gestureDirection}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              state,\n              getPreviousRoute,\n              onContentHeightChange: this.handleFloatingHeaderLayout,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}