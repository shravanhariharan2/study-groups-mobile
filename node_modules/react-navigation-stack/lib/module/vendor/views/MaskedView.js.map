{"version":3,"sources":["MaskedView.tsx"],"names":["React","UIManager","RNCMaskedView","isMaskedViewAvailable","getViewManagerConfig","MaskedView","children","rest"],"mappings":"qPAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,qCAA1B,CAMA,GAAMC,CAAAA,qBAAqB,CAEzBF,SAAS,CAACG,oBAAV,CAA+B,eAA/B,GAAmD,IAFrD,CAIA,cAAe,SAASC,CAAAA,UAAT,MAAkD,IAA5BC,CAAAA,QAA4B,MAA5BA,QAA4B,CAAfC,IAAe,6CAC/D,GAAIJ,qBAAJ,CAA2B,CACzB,MAAO,qBAAC,aAAD,aAAmBI,IAAnB,mDAA0BD,QAA1B,CAAP,CACD,CAED,MAAOA,CAAAA,QAAP,CACD","sourcesContent":["import * as React from 'react';\nimport { UIManager } from 'react-native';\nimport RNCMaskedView from '@react-native-community/masked-view';\n\ntype Props = React.ComponentProps<typeof RNCMaskedView> & {\n  children: React.ReactElement;\n};\n\nconst isMaskedViewAvailable =\n  // @ts-ignore\n  UIManager.getViewManagerConfig('RNCMaskedView') != null;\n\nexport default function MaskedView({ children, ...rest }: Props) {\n  if (isMaskedViewAvailable) {\n    return <RNCMaskedView {...rest}>{children}</RNCMaskedView>;\n  }\n\n  return children;\n}\n"]}